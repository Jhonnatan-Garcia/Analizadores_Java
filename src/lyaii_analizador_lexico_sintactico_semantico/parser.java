
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Thu Sep 08 17:59:47 CDT 2016
//----------------------------------------------------

package lyaii_analizador_lexico_sintactico_semantico;

import java.io.*;
import java_cup.runtime.*;
import javax.swing.JOptionPane;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Thu Sep 08 17:59:47 CDT 2016
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\020\000\002\002\004\000\002\002\004\000\002\002" +
    "\003\000\002\003\007\000\002\003\007\000\002\003\003" +
    "\000\002\004\004\000\002\004\003\000\002\005\013\000" +
    "\002\005\003\000\002\007\012\000\002\007\003\000\002" +
    "\010\005\000\002\010\007\000\002\010\003\000\002\006" +
    "\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\055\000\014\004\012\012\016\014\005\022\011\024" +
    "\017\001\002\000\016\002\ufff8\004\ufff8\012\ufff8\014\ufff8" +
    "\022\ufff8\024\ufff8\001\002\000\006\015\043\025\042\001" +
    "\002\000\016\002\ufff3\004\ufff3\012\ufff3\014\ufff3\022\ufff3" +
    "\024\ufff3\001\002\000\016\002\ufffc\004\ufffc\012\ufffc\014" +
    "\ufffc\022\ufffc\024\ufffc\001\002\000\016\002\uffff\004\uffff" +
    "\012\uffff\014\uffff\022\uffff\024\uffff\001\002\000\004\006" +
    "\033\001\002\000\004\005\025\001\002\000\016\002\ufffa" +
    "\004\ufffa\012\ufffa\014\ufffa\022\ufffa\024\ufffa\001\002\000" +
    "\016\002\ufff6\004\ufff6\012\ufff6\014\ufff6\022\ufff6\024\ufff6" +
    "\001\002\000\016\002\024\004\012\012\016\014\005\022" +
    "\011\024\017\001\002\000\004\013\022\001\002\000\004" +
    "\027\020\001\002\000\004\013\021\001\002\000\020\002" +
    "\ufff2\004\ufff2\012\ufff2\014\ufff2\021\ufff2\022\ufff2\024\ufff2" +
    "\001\002\000\016\002\ufffb\004\ufffb\012\ufffb\014\ufffb\022" +
    "\ufffb\024\ufffb\001\002\000\016\002\001\004\001\012\001" +
    "\014\001\022\001\024\001\001\002\000\004\002\000\001" +
    "\002\000\004\006\026\001\002\000\006\007\027\010\030" +
    "\001\002\000\004\011\032\001\002\000\004\011\031\001" +
    "\002\000\016\002\ufffd\004\ufffd\012\ufffd\014\ufffd\022\ufffd" +
    "\024\ufffd\001\002\000\016\002\ufffe\004\ufffe\012\ufffe\014" +
    "\ufffe\022\ufffe\024\ufffe\001\002\000\004\006\034\001\002" +
    "\000\004\025\035\001\002\000\004\006\036\001\002\000" +
    "\004\006\037\001\002\000\004\023\040\001\002\000\004" +
    "\013\041\001\002\000\016\002\ufff7\004\ufff7\012\ufff7\014" +
    "\ufff7\022\ufff7\024\ufff7\001\002\000\006\013\055\026\054" +
    "\001\002\000\004\016\044\001\002\000\004\017\045\001" +
    "\002\000\004\020\046\001\002\000\010\014\050\022\011" +
    "\024\017\001\002\000\006\014\050\024\017\001\002\000" +
    "\004\025\042\001\002\000\004\024\017\001\002\000\004" +
    "\021\053\001\002\000\016\002\ufff9\004\ufff9\012\ufff9\014" +
    "\ufff9\022\ufff9\024\ufff9\001\002\000\004\027\056\001\002" +
    "\000\016\002\ufff5\004\ufff5\012\ufff5\014\ufff5\022\ufff5\024" +
    "\ufff5\001\002\000\004\013\057\001\002\000\016\002\ufff4" +
    "\004\ufff4\012\ufff4\014\ufff4\022\ufff4\024\ufff4\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\055\000\020\002\014\003\007\004\006\005\012\006" +
    "\005\007\003\010\013\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\016\003\022\004\006\005\012\006" +
    "\005\007\003\010\013\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\006\005\007\046\010\013\001\001\000\006\006\005" +
    "\010\050\001\001\000\002\001\001\000\004\006\051\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




        public static void main(String args[]) throws Exception{
            
            //new parser(new Yylex(new FileInputStream(args[0]))).parse();
            //Reader reader = new BufferedReader(new FileReader("C:\\Users\\Jhonnatan Garcia\\Documents\\LYAII_Analizador_Lexico_Sintactico_Semantico\\src\\lyaii_analizador_lexico_sintactico_semantico\\codigoFuente.txt"));
            //new parser(new Yylex(System.in)).parse();

        }


        public void syntax_error(Symbol s){

            report_error("Error De Sintaxis, Linea: " + (s.right + 1) +
            " Columna: " + s.left + ". Texto: \"" + s.value + "\"", null);
            
            
        }



}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Retorno ::= RETURN NUMERO PYC 
            {
              Object RESULT =null;
		JOptionPane.showMessageDialog(null, "Analisis Sintactico Realizado Correctamente"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Retorno",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Suma ::= Retorno 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Suma",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Suma ::= INT IDENTIFICADOR ASIGNACION NUMERO PYC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Suma",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Suma ::= INT IDENTIFICADOR PYC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Suma",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Mensaje ::= Suma 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Mensaje",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Mensaje ::= COUT MENOR_QUE MENOR_QUE IDENTIFICADOR MENOR_QUE MENOR_QUE ENDL PYC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Mensaje",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Inicializacion ::= Mensaje 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Inicializacion",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Inicializacion ::= INT MAIN ABRIR_P CERRAR_P ABRIR_LL Mensaje Suma Retorno CERRAR_LL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Inicializacion",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Metodo ::= Inicializacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Metodo",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Metodo ::= STD PYC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Metodo",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Libreria ::= Metodo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Libreria",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Libreria ::= NUMERAL INCLUDE MENOR_QUE LIBRERIA_DLIB MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Libreria",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Libreria ::= NUMERAL INCLUDE MENOR_QUE LIBRERIA_IO MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Libreria",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Inicio ::= Libreria 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Inicio",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Inicio ::= Inicio Libreria 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Inicio",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

